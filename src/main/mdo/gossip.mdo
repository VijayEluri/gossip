<?xml version="1.0" encoding="UTF-8"?>

<model xmlns="http://modello.codehaus.org/MODELLO/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://modello.codehaus.org/MODELLO/1.0.0 http://modello.codehaus.org/xsd/modello-1.0.0.xsd"
       xml.namespace="http://sonatype.org/gossip/${version}"
       xml.schemaLocation="http://sonatype.org/xsd/gossip-${version}.xsd">

    <id>gossip</id>
    <name>Gossip</name>

    <defaults>
        <default>
            <key>package</key>
            <value>org.sonatype.gossip.model</value>
        </default>
    </defaults>

    <classes>
        <class rootElement="true" xml.tagName="gossip">
            <name>Model</name>
            <version>1.0.0+</version>
            <fields>
                <field>
                    <name>version</name>
                    <version>1.0.0+</version>
                    <required>true</required>
                    <type>String</type>
                </field>

                <field>
                    <name>properties</name>
                    <version>1.0.0+</version>
                    <type>Properties</type>
                    <association xml.mapStyle="inline">
                        <type>String</type>
                        <multiplicity>*</multiplicity>
                    </association>
                </field>

                <field>
                    <name>sources</name>
                    <version>1.0.0+</version>
                    <association>
                        <type>SourceNode</type>
                        <multiplicity>*</multiplicity>
                    </association>
                </field>

                <field>
                    <name>profiles</name>
                    <version>1.0.0+</version>
                    <association>
                        <type>ProfileNode</type>
                        <multiplicity>*</multiplicity>
                    </association>
                </field>
            </fields>

            <codeSegments>
                <codeSegment>
                    <version>1.0.0+</version>
                    <code><![CDATA[
                        public ProfileNode findProfile(final String name) {
                            assert name != null;
                            for (ProfileNode profile : getProfiles()) {
                                if (profile.getName().trim().equals(name)) {
                                    return profile;
                                }
                            }
                            return null;
                        }
                    ]]></code>
                </codeSegment>
            </codeSegments>
        </class>

        <class java.abstract="true">
            <name>Node</name>
            <version>1.0.0+</version>
            <fields>
                <field>
                    <name>id</name>
                    <version>1.0.0+</version>
                    <required>false</required>
                    <type>String</type>
                </field>
            </fields>

            <codeSegments>
                <codeSegment>
                    <version>1.0.0+</version>
                    <code><![CDATA[
                        public int hashCode() {
                            return getId().hashCode();
                        }
                    ]]></code>
                </codeSegment>

                <codeSegment>
                    <version>1.0.0+</version>
                    <code><![CDATA[
                        public boolean equals(final Object target) {
                            if (target instanceof Node) {
                                return ((Node)target).getId().equals(this.getId());
                            }
                            return false;
                        }
                    ]]></code>
                </codeSegment>
            </codeSegments>
        </class>

        <class xml.tagName="profile">
            <name>ProfileNode</name>
            <version>1.0.0+</version>
            <superClass>Node</superClass>

            <fields>
                <field>
                    <name>name</name>
                    <version>1.0.0+</version>
                    <required>true</required>
                    <type>String</type>
                </field>

                <field>
                    <name>properties</name>
                    <version>1.0.0+</version>
                    <type>Properties</type>
                    <association xml.mapStyle="inline">
                        <type>String</type>
                        <multiplicity>*</multiplicity>
                    </association>
                </field>

                <field>
                    <name>includes</name>
                    <version>1.0.0+</version>
                    <association>
                        <type>String</type>
                        <multiplicity>*</multiplicity>
                    </association>
                </field>

                <field>
                    <name>loggers</name>
                    <version>1.0.0+</version>
                    <association>
                        <type>LoggerNode</type>
                        <multiplicity>*</multiplicity>
                    </association>
                </field>

                <field>
                    <name>triggers</name>
                    <version>1.0.0+</version>
                    <association>
                        <type>TriggerNode</type>
                        <multiplicity>*</multiplicity>
                    </association>
                </field>

                <field>
                    <name>listeners</name>
                    <version>1.0.0+</version>
                    <association>
                        <type>ListenerNode</type>
                        <multiplicity>*</multiplicity>
                    </association>
                </field>
            </fields>

            <codeSegments>
                <codeSegment>
                    <version>1.0.0+</version>
                    <code><![CDATA[
                        public String toString() {
                            return getClass().getSimpleName() +
                                "{name=" + getName() +
                                "}";
                        }
                    ]]></code>
                </codeSegment>

                <codeSegment>
                    <version>1.0.0+</version>
                    <code><![CDATA[
                        public String getId() {
                            String id = super.getId();
                            if (id == null) {
                                return getName();
                            }
                            return id;
                        }
                    ]]></code>
                </codeSegment>
            </codeSegments>
        </class>
        
        <class xml.tagName="logger">
            <name>LoggerNode</name>
            <version>1.0.0+</version>
            <superClass>Node</superClass>

            <fields>
                <field>
                    <name>name</name>
                    <version>1.0.0+</version>
                    <required>true</required>
                    <type>String</type>
                </field>

                <field>
                    <name>level</name>
                    <version>1.0.0+</version>
                    <required>true</required>
                    <type>String</type>
                </field>
            </fields>

            <codeSegments>
                <codeSegment>
                    <version>1.0.0+</version>
                    <code><![CDATA[
                        public org.sonatype.gossip.Level asLevel() {
                            return org.sonatype.gossip.Level.valueOf(getLevel().toUpperCase());
                        }
                    ]]></code>
                </codeSegment>

                <codeSegment>
                    <version>1.0.0+</version>
                    <code><![CDATA[
                        public String toString() {
                            return getClass().getSimpleName() +
                                "{name=" + getName() +
                                ",level=" + getLevel() +
                                "}";
                        }
                    ]]></code>
                </codeSegment>

                <codeSegment>
                    <version>1.0.0+</version>
                    <code><![CDATA[
                        public String getId() {
                            String id = super.getId();
                            if (id == null) {
                                return getName();
                            }
                            return id;
                        }
                    ]]></code>
                </codeSegment>
            </codeSegments>
        </class>

        <class java.abstract="true">
            <name>FactoryNode</name>
            <version>1.0.0+</version>
            <superClass>Node</superClass>
            
            <fields>
                <field>
                    <name>type</name>
                    <version>1.0.0+</version>
                    <required>true</required>
                    <type>String</type>
                </field>

                <field>
                    <name>configuration</name>
                    <version>1.0.0+</version>
                    <type>DOM</type>
                </field>
            </fields>

            <codeSegments>
                <codeSegment>
                    <version>1.0.0+</version>
                    <code><![CDATA[
                        public String toString() {
                            return getClass().getSimpleName() +
                                "{type=" + getType() +
                                ",configuration=" + getConfiguration() +
                                " }";
                        }
                    ]]></code>
                </codeSegment>

                <codeSegment>
                    <version>1.0.0+</version>
                    <code><![CDATA[
                        public void setType(final Class type) {
                            setType(type.getName());
                        }
                    ]]></code>
                </codeSegment>

                <codeSegment>
                    <version>1.0.0+</version>
                    <code><![CDATA[
                        public String getId() {
                            String id = super.getId();
                            if (id == null) {
                                return getType();
                            }
                            return id;
                        }
                    ]]></code>
                </codeSegment>
            </codeSegments>
        </class>

        <class xml.tagName="source">
            <name>SourceNode</name>
            <version>1.0.0+</version>
            <superClass>FactoryNode</superClass>

            <codeSegments>
                <codeSegment>
                    <version>1.0.0+</version>
                    <code><![CDATA[
                        public org.sonatype.gossip.source.Source create() throws Exception {
                            return ComponentFactory.create(this);
                        }
                    ]]></code>
                </codeSegment>
            </codeSegments>
        </class>
        
        <class xml.tagName="trigger">
            <name>TriggerNode</name>
            <version>1.0.0+</version>
            <superClass>FactoryNode</superClass>

            <codeSegments>
                <codeSegment>
                    <version>1.0.0+</version>
                    <code><![CDATA[
                        public org.sonatype.gossip.trigger.Trigger create() throws Exception {
                            return ComponentFactory.create(this);
                        }
                    ]]></code>
                </codeSegment>
            </codeSegments>
        </class>

        <class xml.tagName="listener">
            <name>ListenerNode</name>
            <version>1.0.0+</version>
            <superClass>FactoryNode</superClass>

            <codeSegments>
                <codeSegment>
                    <version>1.0.0+</version>
                    <code><![CDATA[
                        public org.sonatype.gossip.listener.Listener create() throws Exception {
                            return ComponentFactory.create(this);
                        }
                    ]]></code>
                </codeSegment>
            </codeSegments>
        </class>
    </classes>

</model>